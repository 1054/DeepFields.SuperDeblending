updateAll 00
    # 
    #  In this script we will:
    #      1. read all catalog
    #      2. read all results
    #      3. 
    # 
    #  Usage:
    # 
    #      load AstroDepthUpdateCatalog_v3.sm updateAll
    # 
    #  first read old catalog
    load rfile.sm   
    data "RadioOwenMIPS24_priors_Jan05_2015.txt"
    rfile
    # 
    #updateCatalog goodsn 24 20150430
    #updateCatalog goodsn 20cm 20150430
    updateCatalog goodsn 100
    updateCatalog goodsn 160
    updateCatalog goodsn 250
    updateCatalog goodsn 350
    updateCatalog goodsn 500
    updateCatalog goodsn 1160
    #data "/data/AstroDepth/GOODSN/Catalog/RadioOwenMIPS24_priors_Jan05_2015.txt" 
    #read {f24 5 df24 6 f16 7 df16 8 f1160 19 df1160 20}
    #set Catalog_Updated = DataDir+{"/Catalog/Updated_Catalog_20150430_v20150626.txt"} # output updated Catalog
    #print $(Catalog_Updated) '%-9.0f %12.7f %12.7f %9g\n' \
    #{}
    # 
    # <added><20150626><dzliu> f24, radio are uJy
    # foreach var {f24 df24 radio eradio} {set $var = $var / 1e3}
    # 
    # <added><20150626><dzliu> PACS high-pass filtering
    if(1==1) {
		###<TEST><20140326><DZLIU>### 
		if(is_vector(f100) && is_vector(df100)) {
		foreach var {f100 df100} {set $var=f24>60 && f24/df24>3 ? $var*1.12 : $var*1.19} }
		if(is_vector(f160) && is_vector(df160)) {
		foreach var {f160 df160} {set $var=f24>60 && f24/df24>3 ? $var*1.12 : $var*1.19} }
		###<Added><20140416><DZLIU>### 
		print +done_pacs_flux_and_error_compensation 'Done PACS 100 and 160 flux and error compensations ' {}
		print +done_pacs_flux_and_error_compensation 'with factor 1.12 for bright sources and 1.19 for faint sources, ' {}
		print +done_pacs_flux_and_error_compensation 'to correct the missing flux due to high-pass filtering.\n' {}
	}
    # 
    data "RadioOwenMIPS24_priors_Jan05_2015.txt" 
    read {f16 7 df16 8}
    print "Updated_Catalog_20150430_v20150626.txt" '%-9.0f %12.7f %12.7f %9g\n' \
    {_id _ra _de zp_X f24 df24 f16 df16 f100 df100 f160 df160 f250 df250 f350 df350 f500 df500 f1160 df1160 \
    radio eradio _fch1 _dfch1 _fch2 _dfch2 _fch3 _dfch3 _fch4 _dfch4 KtotX MassX distX spezX zq source distz idz goodArea}






updateCatalog 03
    # 
    #  In this script we will:
    #      
    #      1. read Initial Catalog
    #      2. read Photometry Result
    #      3. run_correct_df
    #      4. write a new corrected_f_df_$1_$2.txt
    #  
    #  Usually an AstroDepth Catalog has columns:
    #  
    #      id ra de 
    # 
    #  Usage:
    # 
    #      load AstroDepthUpdateCatalog_v3.sm updateCatalog goodsn 100 WithNewObj
    #      load AstroDepthUpdateCatalog_v3.sm updateCatalog goodsn 160
    #      load AstroDepthUpdateCatalog_v3.sm updateCatalog goodsn 250
    #      load AstroDepthUpdateCatalog_v3.sm updateCatalog goodsn 350
    #      load AstroDepthUpdateCatalog_v3.sm updateCatalog goodsn 500
    # 
    # 
    
    ############################
    ### Input Argument Check ###
    ############################
    if($?1==0||$?2==0){
    print 'Example: macro read AstroDepthUpdateCatalog_v3.sm updateCatalog goodsn 24 [date]\n' {}
    return
    }
    
    
    ########################################
    ### Set Data Info and Check Software ###
    ########################################
    load AstroDepthSetDataInfo_v3.sm SetDataInfo $1 $2 $3
    
    
    ##############################
    ### Load AstroDepth Macros ###
    ##############################
    load vecSNR.sm
    load run_image_util.sm
    load run_correct_df.sm
    
    
    ##############################
    ### Read RunGalfit Results ###
    ##############################
    load rfile.sm
    data $(PfitCsv)
    rfile
    
    
    ################################################
    ### Correct the df$imax of RunGalfit Results ###
    ################################################
    DEFINE exit_status DELETE !test -f $(DataDir)/Catalog/correct_df_$1"_"$(boxBand)/corrected_f_df_$1"_"$(boxBand).txt
    if($exit_status!=0) {
        # check whether we have the corrected_f_df file or not, if not, we will correct df right now
        # to run correctdf macro, we need to define these variables: 
        define imax $(boxBand)
        define imax_name_psf $PsfPhoto_$(boxBand)
        define imax_name_rms $RmsPhoto_$(boxBand)
        define imax_name_res "rebuild_mosaic_residual"
        define imax_name_sim "SIM_Corrects_"$1"_"$(boxBand)
        # -- first check residual map -- which we will use to measure fRes to correct df
        DEFINE exit_status DELETE !test -f $(boxRoot)/$imax_name_res.fits
        if($exit_status!=0) {
            print 'The residual image $(boxRoot)/$imax_name_res.fits was not found!\n' {}
            print 'Please run run_rebuild_map.sm or postGalfitResidual.pro' {}
            print 'to make the residual image first!\n' {}
            return
        }
        # -- then check Simulation file
        DEFINE exit_status DELETE !test -f $(DataDir)/Simulation/$imax_name_sim.txt
        if($exit_status!=0) {
            print 'The simulation file $(DataDir)/Simulation/$imax_name_sim.txt was not found!\n' {}
            print 'Please run run_simu_stats.sm to analyze the simulation and ' {}
            print 'derive correction factors first!\n' {}
            return
        }
        # -- then chdir into Catalog_TempDir and correctdf and write Catalog_TempCat
         chdir $(DataDir)"/Catalog"
        !mkdir correct_df_$1"_"$(boxBand) 2>/dev/null
         chdir correct_df_$1"_"$(boxBand)
        !cp $(boxRoot)/$imax_name_psf.fits .
        !cp $(boxRoot)/$imax_name_rms.fits .
        !cp $(boxRoot)/$imax_name_res.fits .
        !cp $(DataDir)/Simulation/$imax_name_sim.txt .
        input $imax_name_sim.txt
        correctdf
        set snr$imax = vecSNR(f$imax,df$imax) # load vecSNR.sm 
        print corrected_f_df_$1"_"$(boxBand).txt \
              '%15.0f%15g%15g%15g%15g%15g%15g%15g\n' \
              <id$imax f$imax df$imax _gCdfOutdf3 _gCdfOutdf2 _gCdfOutdf1 _gCdfInpdf snr$imax>
         chdir "../"
        #chdir $(BackDir)
        !echo 
        !echo Successfully saved to $(DataDir)/Catalog/correct_df_$1"_"$(boxBand)/corrected_f_df_$1"_"$(boxBand).txt
        !echo 
    } else {
        # if we have the corrected_f_df file, then we just read it
        !echo 
        !echo Reading existing file $(DataDir)/Catalog/correct_df_$1"_"$(boxBand)/corrected_f_df_$1"_"$(boxBand).txt
        !echo 
         chdir $(DataDir)"/Catalog"
         chdir correct_df_$1"_"$(boxBand)
         rfile corrected_f_df_$1"_"$(boxBand).txt
         chdir "../"
        #chdir $(BackDir)
    }
    # now df$imax has been updated
    # and intermediate step plots are also created
    # 
    # fin


