#!/bin/bash
# 
# Usage:
#     cp ~/Cloud/Dropbox/Software/galfit/do_GalsimRunqsub /upgal/Software/galfit/
#     ssh -X planer
#     cd /dsm/upgal/data/dliu/Temp/daddi_goodsn/GalSIM/doing24/boxgalsim/
#     /dsm/upgal/data/dliu/Software/galfit/do_GalsimRunqsub
# 
# Last update:
#      2015-06-23 dzliu
# 
echo Current directory $(pwd)
echo Starting time $(date +"%Y-%m-%d %H:%M:%S")
#GalfitTmpList=$(find . -maxdepth 1 -type d -name "box[0-9]*"       | sort -t 'x' -k 2 -n); GalfitBoxList=($(echo $GalfitTmpList))
#GalfitTmpList=$(find . -maxdepth 1 -type f -name "runbox[0-9]*.sh" | sort -t 'x' -k 2 -n); GalfitRunList=($(echo $GalfitTmpList))
GalfitBoxList=( $(find . -maxdepth 1 -type d -name "box*[0-9]"       | sort -t 'x' -k 2 -n) )
GalfitRunList=( $(find . -maxdepth 1 -type f -name "runbox*[0-9].sh" | sort -t 'x' -k 2 -n) )
#echo $GalfitBoxList
#echo $GalfitRunList
#echo ${#GalfitBoxList}
#echo ${#GalfitRunList}
#echo ${GalfitBoxList[1]}
#echo ${GalfitRunList[1]}
#echo ${#GalfitBoxList[@]}
#echo ${#GalfitRunList[@]}
if [[ ${#GalfitBoxList[@]} != ${#GalfitRunList[@]} ]]; then
    echo "boxgalfit directory not fully prepared!"
    echo "please prepare the data like this:"
fi
if [[ ${#GalfitBoxList[@]} != ${#GalfitRunList[@]} || "$*" == *"-h"* ]]; then
    echo "    boxgalfit"
    echo "       |- box1"
    echo "       |    |- fit.param"
    echo "       |    |- fit.input"
    echo "       |    |- fit.limit"
    echo "       |    |- sci.fits"
    echo "       |    |- rms.fits"
    echo "       |    |- psf.fits"
    echo "       |- runbox1.sh"
    echo "       |- box2"
    echo "       |- runbox2.sh"
    echo "       |- box3"
    echo "       |- runbox3.sh"
    echo "       |- ..."
    echo ""
    echo " len(box) = ${#GalfitBoxList[@]}"
    echo " len(runbox.sh) = ${#GalfitRunList[@]}"
    echo ""
    #<TODO># exit
fi
# 
# 
GalfitRunFrom=0
GalfitRunUpto=${#GalfitBoxList[@]} # 3600 # ${#GalfitBoxList[@]}
for (( i = $GalfitRunFrom; i < $GalfitRunUpto; i++ )); do
    # debug 
    # if [[ $(echo "${GalfitBoxList[i]}" | sed -e 's#./box##g') != 83 ]]; then
    #     continue
    # fi
    # we do not re-galfit the data 
    if [[ -f "${GalfitBoxList[i]}"/fit.log ]]; then
        echo 
        echo Detected "${GalfitBoxList[i]}"/fit.log, we will not redo the fit.
        echo 
    else
        # <TODO> make sure not conflicting running qsub
        if [[ 1 == 1 ]]; then
            # 
            #echo "${GalfitRunList[i]}"
            # check hostname
            if [[ $(hostname) == *sapmcm116* || $(hostname) == *localhost* ]]; then
                echo Checking hostname sapmcm116
                cp  "${GalfitRunList[i]}"                   "${GalfitRunList[i]}.sapmcm.sh"
                sed -i -e s%'cd .*/boxgalsim'%"cd $(pwd)"%g "${GalfitRunList[i]}.sapmcm.sh"
                sed -i -e s%'cd .*rname $0))'%"cd $(pwd)"%g "${GalfitRunList[i]}.sapmcm.sh"
                sed -i -e s%'~/Software/galfit/'%""%g       "${GalfitRunList[i]}.sapmcm.sh"
                chmod a+x "${GalfitRunList[i]}.sapmcm.sh"
                echo "$PWD/${GalfitRunList[i]}.sapmcm.sh"
                cat "${GalfitRunList[i]}.sapmcm.sh"
                "${GalfitRunList[i]}.sapmcm.sh"
                echo Sleeping 1s
                echo 
                sleep 1
            fi
            if [[ $(hostname) == *sappcb34* ]]; then
                echo Checking hostname sappcb34
                cp  "${GalfitRunList[i]}"                   "${GalfitRunList[i]}.sappcb.sh"
                sed -i -e s%'cd .*/boxgalsim'%"cd $(pwd)"%g "${GalfitRunList[i]}.sappcb.sh"
                sed -i -e s%'cd .*rname $0))'%"cd $(pwd)"%g "${GalfitRunList[i]}.sappcb.sh"
                sed -i -e s%'~/Software/galfit/'%""%g       "${GalfitRunList[i]}.sappcb.sh"
                chmod a+x "${GalfitRunList[i]}.sappcb.sh"
                echo "$PWD/${GalfitRunList[i]}.sappcb.sh"
                cat "${GalfitRunList[i]}.sappcb.sh"
                "${GalfitRunList[i]}.sappcb.sh"
                echo Sleeping 0.5s
                echo 
                sleep 0.5
            fi
            if [[ $(hostname) == *planer* ]]; then
                echo Checking hostname planer
                cp  "${GalfitRunList[i]}"                                  "${GalfitRunList[i]}.planer.sh"
                sed -i -e s%'cd .*/boxgalsim'%"cd $(pwd)"%g                "${GalfitRunList[i]}.planer.sh"
                sed -i -e s%'cd .*rname $0))'%"cd $(pwd)"%g                "${GalfitRunList[i]}.planer.sh"
                sed -i -e s%'~/Software'%"/dsm/upgal/data/dliu/Software"%g "${GalfitRunList[i]}.planer.sh"
                #echo Counting qsub task "$(showq | grep dliu | wc -l)"
                #while [[ "$(showq | grep dliu | wc -l)" -ge 12 ]]; do
                #sleep 12
                #echo Counting qsub task "$(showq | grep dliu | wc -l)"
                #done
                echo Counting qsub task "$(qstat | grep dliu | wc -l)"
                while      [[   12  -le "$(qstat | grep dliu | wc -l)" ]]; do
                sleep           12
                echo Counting qsub task "$(qstat | grep dliu | wc -l)"
                done
                echo                "$PWD/${GalfitRunList[i]}.planer.sh"
                cat                      "${GalfitRunList[i]}.planer.sh"
                echo -n Adding qsub task "${GalfitRunList[i]}.planer.sh" : ''
                qsub -l walltime=3:15:00 "${GalfitRunList[i]}.planer.sh"
                echo Sleeping 3s
                sleep 3
            fi
            if [[ $(hostname) == *sapherschel* ]]; then
                echo Checking hostname sapherschel
                cp  "${GalfitRunList[i]}"                                  "${GalfitRunList[i]}.sapherschel.sh"
                sed -i -e s%'cd .*/boxgalsim'%"cd $(pwd)"%g                "${GalfitRunList[i]}.sapherschel.sh"
                sed -i -e s%'~/Software'%"/dsm/upgal/data/dliu/Software"%g "${GalfitRunList[i]}.sapherschel.sh"
                chmod a+x "${GalfitRunList[i]}.sapherschel.sh"
                echo "$PWD/${GalfitRunList[i]}.sapherschel.sh"
                cat "${GalfitRunList[i]}.sapherschel.sh"
                "${GalfitRunList[i]}.sapherschel.sh"
                echo Sleeping 0.5s
                sleep 0.5
            fi
        fi
    fi
done
# 
# 
echo Finish time $(date +"%Y-%m-%d %H:%M:%S")


