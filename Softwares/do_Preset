#!/bin/bash
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# Check Superdeblending Softwares
if [[ x"$SUPERDEBLENDDIR" == x"" ]]; then
    echo "Error! Supderdeblending Softwares were not prepared well!"
    echo "Please make sure you have Supderdeblending/Softwares/SETUP"
    echo "and have ran \"source /path/to/Supderdeblending/Softwares/SETUP\""
fi
# 
# 
if [ $# -lt 3 ]; then 
    echo "Usage: $1 16 201407"
    echo "       $1 100 201412 -vary -catalog RadioOwenMIPS24_priors_April18_2014.txt"
    echo "       $1 100 201412 -vary -catalog RadioOwenMIPS24_priors_April18_2014.txt -catalog-add Residual_priors_Band160.txt"
    echo "       $1 160 201407 -vary -priormag"
    echo "       $1 250 201407 -vary -priormag -fitsname goods_north_wdriz_frac0pt6_norm_19dec06_subbackDL"
    echo "       $1 350 201407 -parallel"
    echo "       $1 500 201407 -postparallel"
    echo "       $1 500 201407 -sedpredict SED_predictions_100_201512.txt"
    echo "       $1 1160 201410 -parallel -fitexclude -fitsname spire500_ima_7p2_v0_100615_subfitDL"
    if [[ "$1" == "Galfit" ]]; then
      echo "       # "
      echo "       # Example of do_Galfit at 20cm_Morrison map"
      echo "       # First we need to make sure \"goFine.sm\" has \"xSet_20cm_Morrison\" subroutine"
      echo "       # Second we need to make sure \"astroPhot.sm\" has \"set_goodsn_photometry_constants_20cm_Morrison\" subroutine"
      echo "       # Then we need to make sure softwares \"Supermongo\", \"IRAF\", \"galfit\", \"CrabFitsHeader\", \"CrabPhotAperPhot\" are ready"
      echo "       # Then we go"
      echo "       do_$1 20cm 201500 -catalog irac_mips_fluxes_hdfn.dat -fitsname-sci GOODSN_1_4GHz_dzliu -fitsname-rms GOODSN_1_4GHz_rms_dzliu"
      echo "       cd boxgalfit/; do_GalfitRunqsub; cd ../"
      echo "       do_$1 20cm 201500 -catalog irac_mips_fluxes_hdfn.dat -fitsname-sci GOODSN_1_4GHz_dzliu -fitsname-rms GOODSN_1_4GHz_rms_dzliu -postparallel"
      echo "       do_$1 20cm 201500 -catalog irac_mips_fluxes_hdfn.dat -fitsname-sci GOODSN_1_4GHz_dzliu -fitsname-rms GOODSN_1_4GHz_rms_dzliu -vary"
      echo "       cd boxgalfit_vary/; do_GalfitRunqsub; cd ../"
      echo "       do_$1 20cm 201500 -catalog irac_mips_fluxes_hdfn.dat -fitsname-sci GOODSN_1_4GHz_dzliu -fitsname-rms GOODSN_1_4GHz_rms_dzliu -vary -postparallel"
      echo "       "
    fi
    exit
fi
# 
export DG_IMAX=$2
export DG_DATE=$3
export DG_FIEL="default" # field
export DG_VARY=0
export DG_GAUS=0 # Gaussian fitting
export DG_SERS=0 # Sersic fitting
export DG_PRIM=0 # PRIORMAG
export DG_PARA=1 # PARALLEL
export DG_PFIT=0 # fit full catalog? 0=fitAll 1=fitInclSubIncl 2=fitExclSubExcl
export DG_FSED="NONE" # "SED_predictions_goodsn_$1" # _$2
export DG_FRES="NONE"
export DG_CATA="NONE" # "RadioOwenMIPS24_priors_April18_2014.txt"
export DG_CATB="NONE"
export DG_VMSK="0.006" # Mask value, usually is 24um 3-sigma
export DG_FMSK="NONE" # Mask image, usually is 24um rms image
export DG_FSCI="NONE"
export DG_FRMS="NONE"
export DG_FPSF="NONE"
export DG_FLOG=$(pwd -P)'/log_'$1'_'$2'_'$3
export DG_FPWD=`pwd -P` # Current Path
export DG_BOXSIZE=0
# 
# Print Date
echo ""
date +"%F %T %Z"
#
# Now check software dependencies on planer
#if [[ $(hostname) == planer* || $(hostname) == sapherschel* ]]; then
#    if [[ -d "/dsm/upgal/data/dliu/Superdeblending/Softwares/" ]]; then 
#        echo ""
#        echo We are running on planer! Loading "/dsm/upgal/data/dliu/Superdeblending/Softwares/SETUP"
#        echo ""
#        source "/dsm/upgal/data/dliu/Superdeblending/Softwares/SETUP"
#    else
#        echo ""
#        echo Warning! "/dsm/upgal/data/dliu/Superdeblending/Softwares/" was not found! "Please make sure you have prepared your own galfit, iraf, sm, wcstools, etc.!"
#        echo ""
#    fi
#fi
echo ""
echo "Checking softwares:"
type galfit
type cl
type sm
type sky2xy
type xy2sky
type CrabPhotAperPhot
echo ""


# 
# Read inputs
# 
while [[ $# -gt 0 ]]; do
    
    DG_COMM=$(echo "$1" | tr '[:upper:]' '[:lower:]')
    
    case "$DG_COMM" in
                        
               "-vary") shift
                        DG_VARY=1
                        DG_PRIM=1 #<Fixed><201700507><dzliu># 
                        DG_FLOG=$DG_FLOG"_Vary"
                        echo ; echo We are varying prior positions!
                        ;;
                        
      "-vary-position") shift
                        DG_VARY=1
                        DG_PRIM=1 #<Fixed><201700507><dzliu># 
                        DG_FLOG=$DG_FLOG"_Vary"
                        echo ; echo We are varying prior positions!
                        ;;
                        
           "-gaussian") shift
                        DG_GAUS=1
                        DG_PRIM=1 #<Fixed><201700507><dzliu># 
                        DG_VARY=1 # must vary position as well
                        DG_FLOG=$DG_FLOG"_Gaussian"
                        echo ; echo We are fitting Gaussian models!
                        ;;
                        
             "-sersic") shift
                        DG_SERS=1
                        DG_PRIM=1 #<Fixed><201700507><dzliu># 
                        DG_VARY=1 # must vary position as well
                        DG_FLOG=$DG_FLOG"_Sersic"
                        echo ; echo We are fitting Sersic models!
                        ;;
                        
           "-priormag") shift
                        DG_PRIM=1
                        DG_FLOG=$DG_FLOG"_PriorMag"
                        ;;
                        
           "-parallel") shift
                        DG_PARA=1
                        DG_FLOG=$DG_FLOG"_Parallel"
                        echo ; echo We are doing parallel!
                        ;;
                        
       "-postparallel") shift
                        DG_PARA=2
                        DG_FLOG=$DG_FLOG"_PostParallel"
                        echo ; echo We are doing post parallel!
                        ;;
                        
      "-post-parallel") shift
                        DG_PARA=2
                        DG_FLOG=$DG_FLOG"_PostParallel"
                        echo ; echo We are doing post parallel!
                        ;;
                       
              "-field") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FIEL=$(echo "$1" | tr '[:upper:]' '[:lower:]')
                            else break; fi; shift
                        done
                        ;;
                       
            "-catalog") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_CATA="$1"
                            else break; fi; shift
                        done
                        ;;
                       
        "-catalog-inp") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_CATA="$1"
                            else break; fi; shift
                        done
                        ;;
                       
        "-catalog-out") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                GALFIT_CATALOG_OUT="$1"
                            else break; fi; shift
                        done
                        ;;
                       
        "-catalog-add") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_CATB="$1"
                            else break; fi; shift
                        done
                        ;;
                       
        "-sedpredict"*) shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FSED="$(echo $1 | sed 's/\.txt$//g')"
                            else break; fi; shift
                        done
                        ;;
                       
       "-sed-predict"*) shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FSED="$(echo $1 | sed 's/\.txt$//g')"
                            else break; fi; shift
                        done
                        ;;
                       
           "-fitsname") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FSCI="$(echo $1 | sed 's/\.fits$//g')"
                            else break; fi; shift
                        done
                        ;;
                       
       "-fitsname-sci") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FSCI="$(echo $1 | sed 's/\.fits$//g')"
                            else break; fi; shift
                        done
                        ;;
                       
       "-fitsname-rms") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FRMS="$(echo $1 | sed 's/\.fits$//g')"
                            else break; fi; shift
                        done
                        ;;
                       
       "-fitsname-psf") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FPSF="$(echo $1 | sed 's/\.fits$//g')"
                            else break; fi; shift
                        done
                        ;;
                        
             "-fitall") shift
                        DG_PFIT=0
                        DG_FLOG=$DG_FLOG"_FitALL"
                        ;;
                       
            "-fitincl") shift
                        DG_PFIT=1
                        DG_FLOG=$DG_FLOG"_FitIncl"
                        ;;
                       
            "-fitexcl") shift
                        DG_PFIT=2
                        DG_FLOG=$DG_FLOG"_FitExcl"
                        ;;
                       
            "-fitadds") shift
                        #DG_CATB="Radec_of_new_priors.txt"
                        DG_FLOG=$DG_FLOG"_FitAdds"
                        ;;
                        
  "-fitsname-goodarea") shift
                        while [[ $# -gt 0 ]]; do
                            if [[ "$1" != "-"* ]]; then
                                DG_FMSK="$(echo $1 | sed 's/\.fits$//g')"
                            else break; fi; shift
                        done
                        ;;
                        
 "-threshold-goodarea") shift
                        DG_VMSK="$1"; shift
                        ;;
                        
           "-box-size") shift
                        DG_BOXSIZE="$1"; shift
                        ;;
                        
                     *) shift
                        
    esac
done
# 
if [[ x"$DG_CATA" != x"NONE" ]]; then
    if [ -f $DG_CATA ]; then
        echo ; echo "We are using catalog $DG_CATA"
        if echo $DG_CATA | grep -q -E '[^a-zA-Z0-9_.]'; then echo ; echo "Sorry! The filename contains non a-zA-Z0-9_ characters! Supermongo could not deal with this!" ; echo ; exit 1; fi
    else
        echo ; echo "Error! Catalog file $DG_CATA does not exist! Abort!"; exit 1
    fi
else 
    echo ; echo "Error! We have no catalog!"; exit 1
fi
# 
if [[ x"$DG_FSCI" != x"NONE" ]]; then
    if [ -f $DG_FSCI.fits ]; then
        echo ; echo "We are using map $DG_FSCI.fits instead of the map in goFine.sm"
        if echo $DG_FSCI | grep -q -E '[^a-zA-Z0-9_.]'; then echo ; echo "Sorry! The filename contains non a-zA-Z0-9_ characters! Supermongo could not deal with this!" ; echo ; exit 1; fi
    else
        echo ; echo "Error! Fits file $DG_FSCI.fits does not exist! Abort!"; exit 1
    fi
else
    echo ; echo "We do not set fitsname-sci and will use the default sci fits image!"
fi
# 
if [[ x"$DG_FRMS" != x"NONE" ]]; then
    if [ -f $DG_FRMS.fits ]; then
        echo ; echo "We are using map $DG_FRMS.fits instead of the map in goFine.sm"
        if echo $DG_FRMS | grep -q -E '[^a-zA-Z0-9_.]'; then echo ; echo "Sorry! The filename contains non a-zA-Z0-9_ characters! Supermongo could not deal with this!" ; echo ; exit 1; fi
    else
        echo ; echo "Error! Fits file $DG_FRMS.fits does not exist! Abort!"; exit 1
    fi
else
    echo ; echo "We do not set fitsname-rms and will use the default rms fits image!"
fi
# 
if [[ x"$DG_FPSF" != x"NONE" ]]; then
    if [ -f $DG_FPSF.fits ]; then
        echo ; echo "We are using map $DG_FPSF.fits instead of the map in goFine.sm"
        if echo $DG_FPSF | grep -q -E '[^a-zA-Z0-9_.]'; then echo ; echo "Sorry! The filename contains non a-zA-Z0-9_ characters! Supermongo could not deal with this!" ; echo ; exit 1; fi
    else
        echo ; echo "Error! Fits file $DG_FPSF.fits does not exist! Abort!"; exit 1
    fi
else
    echo ; echo "We do not set fitsname-psf and will use the default psf fits image!"
fi
# 
if [[ x"$DG_FMSK" != x"NONE" ]]; then
    if [ -f $DG_FMSK.fits ]; then
        echo ; echo "We are using map $DG_FMSK.fits as the goodArea mask map! The default threshold for goodarea is $DG_VMSK if is not set by -threshold-goodarea <TODO>."
        if echo $DG_FMSK | grep -q -E '[^a-zA-Z0-9_.]'; then echo ; echo "Sorry! The filename contains non a-zA-Z0-9_ characters! Supermongo could not deal with this!" ; echo ; exit 1; fi
    else
        echo ; echo "Error! Fits file $DG_FMSK.fits does not exist! Abort!"; exit 1
    fi
else
    echo ; echo "We do not set goodArea mask map and will use the default mask fits image!"
fi
# 
if [[ x"$DG_CATB" != x"NONE" ]]; then
    if [[ -f $DG_CATB ]]; then
        echo ; echo "We will fit additional objects in $DG_CATB!"
        if echo $DG_CATB | grep -q -E '[^a-zA-Z0-9_.]'; then echo ; echo "Sorry! The filename contains non a-zA-Z0-9_ characters! Supermongo could not deal with this!" ; echo ; exit 1; fi
    else
        echo ; echo "Error! Additonal catalog $DG_CATB does not exist! Abort!"; exit 1
    fi
else
    echo ; echo "We do not set any additonal catalog!"
fi
# 
if [[ $DG_PFIT -gt 0 ]]; then
    if [[ -f $DG_FSED.txt ]]; then
        echo ; echo "We are using SED prediction $DG_FSED.txt"
        if [[ $DG_PFIT -eq 1 && x"$DG_CATB" == x ]]; then echo ; echo We are fitting included objects only!; fi
        if [[ $DG_PFIT -eq 1 && x"$DG_CATB" != x ]]; then echo ; echo We are fitting included objects and additional objects only!; fi
        if [[ $DG_PFIT -eq 2 && x"$DG_CATB" == x ]]; then echo ; echo We are fitting excluded objects only!; fi
        if [[ $DG_PFIT -eq 2 && x"$DG_CATB" != x ]]; then echo ; echo We are fitting excluded objects only!; fi #<TODO># adds
    else
        echo ; echo "Error! SED prediction file $DG_FSED.txt does not exist! Abort!"; exit 1
    fi
else 
    echo ; echo "We will fit all catalog objects!"
fi
# 
echo ; echo "We will log into $DG_FLOG.smlog"
# 
# more -- checking files
if [[ ! -f "goFine.sm" && -f "../goFine.sm" ]]; then ln -fs "../goFine.sm"; fi
if [[ ! -f "goSimu.sm" && -f "../goSimu.sm" ]]; then ln -fs "../goSimu.sm"; fi
# if [[ ! -f "run_image_util.sm" ]]; then ln -fs "../run_image_util.sm"; fi
# if [[ ! -f "run_update_catalog.sm" ]]; then ln -fs "../run_update_catalog.sm"; fi
# 





