setcosmo	define H0 $(13.7)  #1/h0 = 15 Gyr h0=65 (19.55->50)
		define La 0.73	# La!=0 ==> Ma = 1 - La
		define Ma 0.27	#ma tutto OK per Omega==1 ????
		define gamma 1.8
		define eps -1.2

cluster	01        	
		##### parameters definitions:
		
		setcosmo
		mate
		
		define Nz_file $1
		data $Nz_file read {usz 1 usdndz 2}
		echo z_med = $(sum(usz*usdndz)/sum(usdndz))
		spline usz usdndz zvec dndz 
		limits zvec dndz erase box connect zvec dndz

		set Nume = gz*dndz**2
		simp ans1 zvec Nume 
		set Deno = dndz
		simp ans2 zvec Deno define ans2 $($ans2**2) 
		
		define B $($ans1/$ans2) 
		echo A_c misurata a 1 grado
		define A_c ?
		define r0  $(($A_c*.03922/($B*3.68))**(1/$gamma))
		echo r_0 = $r0 Mpc 


mate	00	##### functions preparations
		
		define zinte .01

		define Pi 3.1416
		set notdone=1
		define h50 $(19.55/$H0)
		define h100 $(9.778/$H0)

		## cosmologia
		echo COSMOLOGIA: H0=$H0 La=$La Ma=$Ma 
		echo CLUSTERING: eps=$eps gamma=$gamma
		
		set zvec = 0,19.99,$zinte
		if(dimen(zvec)%2==0) {set zvec=zvec concat 20}
		if($La==0) {
		set drdz = 1/((1+zvec)*(1+$Ma*zvec)**.5)
		set Dz = 2/($Ma**2*(1+zvec))*($Ma*zvec+($Ma-2)*(($Ma*zvec+1)**.5 -1))
		set Fx = (1-Dz**2*($Ma-1))**.5
		#set dDdz=(4*($Ma-1)*((1+$Ma*zvec)**.5-1)+$Ma**2*(1-zvec)+2*$Ma*zvec)/($Ma**2*(1+zvec)**2*(1+$Ma*zvec)**.5)
		#set dDdz = $Ma/(1+zvec)*(1+1/2*($Ma-2)*($Ma*zvec+1)**(-.5))-(($Ma*zvec+($Ma-2)*(($Ma*zvec+1)**.5-1))/(1+zvec)**2)
		set dDdz = 2/$Ma**2*(($Ma+($Ma-2)*(1/2*$Ma*($Ma*zvec+1)**(-.5)))/(1+zvec)) - Dz/(1+zvec)
		echo ECCOMI
		} ELSE { # La != 0
		set Fx = zvec*0+1.0 # Fx == 1 !
		set drdz = ((1-$La)*(1+zvec)**3+$La)**(-.5)
		declare Dz_ 1 set Dz_ = 0 set _sum = 0 set z_p = 1
		while{z_p<dimen(drdz)} {
		set add = 1/2*(drdz[z_p-1]+drdz[z_p])*$zinte
		set _sum=_sum+add
		set Dz_ = Dz_ CONCAT _sum
		set z_p = z_p+1
		}
		set Dz=Dz_
		set dDdz = ((1-$La)*(1+zvec)**3+$La)**(-.5)
		}
		set dVz = 1/((60*180/$Pi)**2)*2.153*(10**11)/($h50**3)*Dz**2*drdz # Elemento di volume in Mpc3/arcmin2  
		set dDdz=dDdz*6*10**3/$h50 #dDdz in Mpc
		set Dz=Dz*6*10**3/$h50 #Dz in Mpc
		set Dz[0]=1
		
		set gz = (1/dDdz)*Dz**(1-$gamma)*Fx*(1+zvec)**(-3-$eps+$gamma)
		set lgz=lg(gz)

Volume	02	set xxd = dVz if (zvec<=$2 && zvec>=$1)
		echo $(sum(xxd)*$zinte)

AvsK   	
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
		
		setcosmo
		mate

		define tre 5

		define ltype 5
		cd /home/eolo/galaxy/andrea/daddi/programmi/models/z_distrib
		!\rm temp
		
		set i = 0,5
		set zvalf = {44 49 59 60 61 62}
		set r00 = {9.11 9.58 9.6 9.49 9.31 9.15} #0.3 0.7
		#set r00 = {14.14 14.56 14.28 13.86 13.26 12.9} #0.3 0.7
		#set r00 = {10.6 12.5 12.3 11.7 11.3 11.4} #0.3 0
		#set r00 = {8.3 10.3 11.7 12.3 11.8 11.2} #1 0
		foreach vv i {
		define zf $(zvalf[$vv])
		define r0 $(r00[$vv])
		define r0 9.5 #per usare chi2
		set mag=170,220,2
		ltype $ltype
		declare AA 0
		foreach K mag {
		define Nz_file "z_d_"$zf"_"$tre"_"$K
		
		data $Nz_file read {usz 1 usdndz 2}
		#echo z_med = $(sum(usz*usdndz)/sum(usdndz))
		spline usz usdndz zvec dndz 
		#connect zvec dndz
		
		set Nume = gz*dndz**2
		simp ans1 zvec Nume 
		set Deno = dndz
		simp ans2 zvec Deno define ans2 $($ans2**2) 
		
		define B $($ans1/$ans2) 
		define A_c  $($r0**$gamma/.03922*($B*3.68))
		#echo $A_c 

		set AA = AA CONCAT $A_c
		}

		set mag=mag/10
		connect mag AA
		print +temp '%.5f ' {AA}
		print +temp '\n' {}
		define ltype $($ltype-1)
		}
		define yp 0.036 define inc .002
		ltype 0 rel 19.5 $yp draw 21.0 $yp define yp $($yp-$inc) label \ z_f=30
		ltype 1 rel 19.5 $yp draw 21.0 $yp define yp $($yp-$inc) label \ z_f=10
		ltype 2 rel 19.5 $yp draw 21.0 $yp define yp $($yp-$inc) label \ z_f=5
		ltype 3 rel 19.5 $yp draw 21.0 $yp define yp $($yp-$inc) label \ z_f=4
		ltype 4 rel 19.5 $yp draw 21.0 $yp define yp $($yp-$inc) label \ z_f=3
		ltype 5 rel 19.5 $yp draw 21.0 $yp define yp $($yp-$inc) label \ z_f=2.5
		ltype 0
		cd /home/eolo/galaxy/andrea/daddi/programmi/models

punti		data "clust_"$tre".dat"
		ltype 0
		location 5000 31000 3500 31000
		limits 16.8 22.2 0 .04 box
		read {k 1 a 2 e 3}
		ptype 15 3 points k a error_y k a e
		xlabel Ks
		define TeX_strings 1
		ylabel Angular Clustering Amplitude
		#relocate 17.5 .003 label r_0 = $r0 Mpc
		data mccarthy.dat read{x 1 y 2 er 3} ptype 4 0 
		points x y error_y x y er
		#AvsK
		location 3500 31000 3500 31000
puntic		data "clust_col.dat"
		limits 0 7 -3.2 -1.3 erase box 0 2
		read {k 1 a 2 e 3}
		set a=lg(a)
		ptype 15 3 points k a logerr k a e
		#xlabel R-Ks
		define TeX_strings 1
		ylabel log Clustering Amplitude
		relocate 20 .03 label r_0 = $r0 Mpc (costante)
AvsRK      	
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
		
		setcosmo
		mate
		
		define r0 9.5
		define K 188
		
		define ltype 5
		cd /home/eolo/galaxy/andrea/daddi/programmi/models/z_distrib
		
		set i = 0,5
		set zvalf = {44 49 59 60 61 62}
		set r00 = {9.11 9.58 9.6 9.49 9.31 9.15}
		foreach vv i {
		define zf $(zvalf[$vv])
		define r0 $(r00[$vv])
		set col = {3 3.5 4 4.5 5 5.3 6 7}
		ltype $ltype
		declare AA 0
		foreach col  {3 3.5 4 4.5 5 5.3 6 7} {
		define Nz_file "z_d_"$zf"_"$col"_"$K
		
		#HERE
		data $Nz_file read {usz 1 usdndz 2}
		spline usz usdndz zvec dndz 
		
		set Nume = gz*dndz**2/sum(gz*dndz**2)
		echo z_med = $(sum(usz*usdndz)/sum(usdndz)) z_wei = $(sum(zvec*Nume))

		
		set Nume = gz*dndz**2
		simp ans1 zvec Nume
		set Deno = dndz
		simp ans2 zvec Deno define ans2 $($ans2**2) 
		
		define B $($ans1/$ans2) 
		define A_c  $($r0**$gamma/.03922*($B*3.68))
		#echo $A_c 
		
		set AA = AA CONCAT $A_c
		}
		
		set mag=col
		set AA=lg(AA)
		connect mag AA
		define ltype $($ltype-1)
		}
		define yp -1.5 define inc .09
		ltype 0 rel .5 $yp draw 2.0 $yp define yp $($yp-$inc) label \ z_f=30
		ltype 1 rel .5 $yp draw 2.0 $yp define yp $($yp-$inc) label \ z_f=10
		ltype 2 rel .5 $yp draw 2.0 $yp define yp $($yp-$inc) label \ z_f=5
		ltype 3 rel .5 $yp draw 2.0 $yp define yp $($yp-$inc) label \ z_f=4
		ltype 4 rel .5 $yp draw 2.0 $yp define yp $($yp-$inc) label \ z_f=3
		ltype 5 rel .5 $yp draw 2.0 $yp define yp $($yp-$inc) label \ z_f=2.5
		ltype 0
		rel 1 -2.4 label K<18.8
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
test	02	#comoving distance tra 2 redshifts		
		set zv = $1,$2,$(($2-$1)/100)
		setcosmo mate
		set drdz=drdz*6*10**3/$h50
		spline zvec drdz zv drdzv
		simp ans zv drdzv
		echo $ans
dNdz      	
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
		
		setcosmo
		mate
		location 4500 31000 3500 31000
		
		define r0 9.5
		define tre 5
		
		define ltype 0
		cd /home/eolo/galaxy/andrea/daddi/programmi/models/z_distrib
		
		window -1 -2 1 2 erase
		limits 0.6 2.6 0 0.9 rel .2 .7 label z_f=3
		foreach zf {44 61} {  #zf=3
		define zf $($zf)
		ltype 3
		define ltype 3
		set mag= {180 184 188 192}
		#set mag= {180 192}
		declare AA 0
		foreach K mag {
		ltype $ltype
		define ltype $($ltype-1)
		define Nz_file "z_d_"$zf"_"$tre"_"$K
		
		data $Nz_file read {usz 1 usdndz 2}
		spline usz usdndz zvec dndz 
		limits 0.6 2.6 0 0.9 box 0 2
		connect zvec dndz
		#connect usz usdndz
		print GZ.dat '%.3f \n' {dndz}
		#define uil ?

		
		set Nume = gz*dndz**2/sum(gz*dndz**2)
		echo z_med = $(sum(usz*usdndz)/sum(usdndz)) z_wei = $(sum(zvec*Nume))
		simp ans1 zvec Nume echo 
		set Deno = dndz
		simp ans2 zvec Deno define ans2 $($ans2**2) 
		}	
		window -1 -2 1 1
		limits 0.6 2.6 0 0.9 rel .2 .7 label z_f=10
		}
		window -1 -2 1 2
		limits -.1 3.1 0 0.9 
		rel 1.8 .8 ltype 0 draw 2.4 .8 label \ K<19.2
		rel 1.8 .7 ltype 1 draw 2.4 .7 label \ K<18.8
		rel 1.8 .6 ltype 2 draw 2.4 .6 label \ K<18.4
		rel 1.8 .5 ltype 3 draw 2.4 .5 label \ K<18.0
		window 1 1 1 1
		limits 0.6 2.6 0 0.9 
		box 1 0
		xlabel z
		ylabel dN/dz [number/arcmin^2/unit z]
		window -1 -2 1 2 
		set xx=0,3,.01
		set gxx = exp(-(xx-1.2)**2/(2*.15**2))
		vecminmax gxx min max
		set gxx = gxx/$max
		limits 0.6 2.6 0 1.2 connect xx gxx
		
		location 3500 31000 3500 31000
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
zbar      	
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
		expand 1.5 erase
		setcosmo
		mate
		location 4500 31000 3500 31000
		
		define r0 9.5
		define tre 5
		
		define ltype 0
		cd /home/eolo/galaxy/andrea/daddi/programmi/models/z_distrib
		
		ltype 5
		define ltype 5
		foreach zf {44 49 59 60 61 62} {  #zf=3
		set mag= 170,220,2
		declare AA 0
		foreach K mag {
		define Nz_file "z_d_"$zf"_"$tre"_"$K
		
		data $Nz_file read {usz 1 usdndz 2}
		
		spline zvec gz usz gzu
		set Nume = gzu*usdndz**2/sum(gzu*usdndz**2)
		#echo z_med = $(sum(usz*usdndz)/sum(usdndz)) z_wei = $(sum(usz*Nume))
		set AA = AA CONCAT $(sum(usz*Nume))
		}       
		ltype $ltype
		limits 160 230 .5 2.7 connect mag AA
		define ltype $($ltype-1)
		}
		window 1 1 1 1 limits 16.0 23.0 .5 2.7 box
		xlabel Ks
		ylabel z_{eff}
		define yp 2.5 define inc .12
		ltype 0 rel 17 $yp draw 18.5 $yp define yp $($yp-$inc) label \ z_f=30
		ltype 1 rel 17 $yp draw 18.5 $yp define yp $($yp-$inc) label \ z_f=10
		ltype 2 rel 17 $yp draw 18.5 $yp define yp $($yp-$inc) label \ z_f=5
		ltype 3 rel 17 $yp draw 18.5 $yp define yp $($yp-$inc) label \ z_f=4
		ltype 4 rel 17 $yp draw 18.5 $yp define yp $($yp-$inc) label \ z_f=3
		ltype 5 rel 17 $yp draw 18.5 $yp define yp $($yp-$inc) label \ z_f=2.5
		
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
chi2	00	
		declare u1 0
		declare u2 0
		foreach rr {1 2 3 4 5 6} {
		cd /home/eolo/galaxy/andrea/daddi/programmi/models/z_distrib
		data temp
		read row A $rr
		set mag= 17,22,.2
		cd /home/eolo/galaxy/andrea/daddi/programmi/models
		data "clust_"$tre".dat"
		read {K 1 Am 2 s 3}
		spline mag A K A9

		define alpha $(sum((Am*A9)/s**2)/sum(A9**2/s**2))
		define chi2 $(sum((Am-A9*$alpha)**2/s**2))
		define dalpha $(1/(sum(A9**2/s**2))**.5)
		define chi2up $(sum((Am-A9*$($alpha+$dalpha))**2/s**2))
		define r0 $(9.5*($alpha)**(1/$gamma))
		define dr0 $(9.5/$gamma*($alpha)**($(1/$gamma-1))*$dalpha)
		echo r0 = $r0 dr0 = $dr0 chi2 = $chi2 r_chi2 = $($chi2/4) 
		#echo $alpha  $dalpha $chi2 $chi2up
		set u1=u1 CONCAT $(9.5*($alpha)**(1/$gamma))
		set u2=u2 CONCAT $chi2

		}
		print table.dat '%.1f & %.1f \\ \n' {u1 u2}

		cd /home/eolo/galaxy/andrea/daddi/programmi/models
Growth	00	setcosmo mate
		declare inted 0
		set RR = 0.1,1.00,.02
		foreach var RR {
		set zuso = 0.002,$var,0.001
		set toint = ($Ma*zuso**(-1)+$La*zuso**2)**(-3/2)
		#IF(2*INT(DIMEN(zuso)/2) == DIMEN(zuso)) {
		#set zuso = zuso CONCAT $($var+$zinte)
		#set toint = toint CONCAT 0
		#}
		simp ans zuso toint
		set inted = inted CONCAT $ans
		}
		set Gr = inted*RR**(-1)*($Ma*RR**(-1)+$La*RR**2)**.5
		set Gr = Gr/Gr[$(dimen(RR)-1)]
		set zR = 1/RR-1
		sort {zR Gr}
		spline zR Gr zvec Growth
		goc zvec Growth
xfa	01	Growth
		set cf = 72/Growth**2/16**$1/(3-$1)/(4-$1)/(6-$1)
bias	05	# $1-> Bias at z=0,  $2-> Correlation at z=0 (between gal and DM)
		# $3-> r0 at z=0
		#set b=(zvec**2-2*zvec*(1+zvec)*($1)*($2)+(1+zvec)**2*$1**2)**.5
		#set r = ((1+zvec)*$1*$2-zvec)/b
		Growth
		set b=((1-Growth)**2-2*(1-Growth)*($1)*($2)+$1**2)**.5/Growth
		set r = ($1*$2-(1-Growth))/b/Growth
		set D2b2 = b**2*Growth**2
		set D2b2 = $3*(D2b2/D2b2[0])**(1/$gamma)
		ticksize 0 0 0 0
		ptype 4 3
		define ltype $5
		ltype $ltype
		#window -1 -4 1 3:4
		window 1 1 1 1
		if($4==1) {limits -.2 4 0 17 erase box}
		limits -.2 4 0 17 
		connect zvec D2b2
		if($4==1) {
		set conf = $3*(1+zvec)**(1-3/$gamma)
		ltype 1 connect zvec conf ltype $ltype
		set conf = $3*(1+zvec)**(1-1.8/$gamma)
		#ltype 1 connect zvec conf ltype $ltype
		data kau_clust.dat read{ax 1 bx 2}
		ltype 4 set bx=bx/$(bx[0])*$3 connect ax bx ltype $ltype
		data clust_z_data read{zp 1 fp 2 ep 3 p1 4 p2 5} 
		set ioi = 0,dimen(zp)-1 foreach var ioi {
		ptype $(p1[$var]) $(p2[$var]) 
		rel $(zp[$var]) $(fp[$var]) dot
		}
		error_y zp fp ep
		xlabel z
		#upper
		#ptype $upper rel 1.1 18 dot ptype 4 3
		ylabel r_0 [h^{-1}Mpc]
		}
		#window -1 -4 1 2
		#if($4==1) {limits zvec 0 5.9 box 0 2 }
		#limits zvec 0 5.9
		#connect zvec b
		#if($4==1) {data bias_z_data read{zp 1 fp 2 ep 3} points zp fp error_y zp fp ep
		#ylabel b
		#upper
		#ptype $upper rel 1.1 5 dot ptype 4 3
		#}
		##ltype 1 set dd_ = 0.41+($1-.41)*(1+zvec)**1.8 connect zvec dd_ ltype $ltype
		#window -1 -4 1 1
		#if($4==1) {
		#limits zvec 0 1.19 box 
		#ylabel G-DM corr
		#xlabel z}
		#limits zvec 0 1.19
		#connect zvec r
xx        	expand 1.5
		macro read clust_models.sm bias 1.8 1 10 1 0
		macro read clust_models.sm bias 1.8 .95 10 0 2
		macro read clust_models.sm bias 1.8 .9 10 0 3
goc        02	limits $1 $2 erase box connect $1 $2
gaus_sm    02	define smo_s $2
		declare smo_dndz 0
		set i=0,dimen(zvec)-1
		foreach var i {
		set smo_dndz = smo_dndz concat $(sum(exp(-($(zvec[$var])-$1)**2/(2*$smo_s**2))))
		}
		set dndz = smo_dndz/sum(smo_dndz)*(dimen($1))/$zinte/6
		goc zvec dndz
		print us_1 {zvec dndz}
modFI	04	data countsA read{k 1 all 2 ell 4}
		declare a1 0
		declare a2 0
		declare ac 0
		foreach var k {
		angFI z_d_PLU_5_$var $1 $2
		set a1=a1 concat $angFIx
		angFI All_$var $3 $4
		set a2=a2 concat $angFIx
		croFI z_d_PLU_5_$var $1 $2 All_$var $3 $4
		set ac=ac concat $croFIx
		}
comps	01	data countsA read{k 1 all 2 ell 4}
		define fact $1
		set ell=ell*$fact
		set atot = (ell/all)**2*a1 + ((all-ell)/all)**2*a2 +2*ell*(all-ell)/all**2*ac
		goc k (lg(atot))
		print comps_mod {k atot}
croFI	06	
		setcosmo
		define eps $3
		define gamma 1.8
		define roo $2
		mate

		data $1 read{a 1 b 2}
		set zz = 0,5,.01 interp2 a b zz nz1
		set roz_pg1 = $roo**$gamma*(1+zz)**($gamma-3-$eps)
		interp2 zvec gz zz gzz1

		setcosmo
		define eps $6
		define gamma 1.8
		define roo $5
		mate

		data $4 read{a 1 b 2}
		set zz = 0,5,.01 interp2 a b zz nz2
		set roz_pg2 = $roo**$gamma*(1+zz)**($gamma-3-$eps)
		interp2 zvec gz zz gzz2

		set nz = nz1*nz2
		set roz_pg = (roz_pg1*roz_pg2)**.5
		set gzz = (gzz1*gzz2)**.5

		set Nume = gzz*nz**2*roz_pg
		simp ans1 zz Nume 
		simp ans2 zz nz

		echo $($ans1/$ans2**2*3.68/.03922)
		define croFIx $($ans1/$ans2**2*3.68/.03922)

angFI	03	
		setcosmo
		define eps $3
		define gamma 1.8
		define roo $2
		mate

		data $1 read{a 1 b 2}
		set zz = 0,5,.01 interp2 a b zz nz
		set roz_pg = $roo**$gamma*(1+zz)**($gamma-3-$eps)
		interp2 zvec gz zz gzz

		set Nume = gzz*nz**2*roz_pg
		simp ans1 zz Nume 
		simp ans2 zz nz

		echo $($ans1/$ans2**2*3.68/.03922)
		define angFIx $($ans1/$ans2**2*3.68/.03922)

clustFI    03	
		##### parameters definitions:
		
		setcosmo
		mate
		
		define Nz_file $1
		data $Nz_file read {usz 1}
		stats_med usz me si echo $me $si
		gaus_sm usz $2
		limits -.2 3.2 dndz erase box connect zvec dndz
		print xxx {zvec dndz}
		
		set Nume = gz*dndz**2
		simp ans1 zvec Nume 
		set Deno = dndz
		simp ans2 zvec Deno define ans2 $($ans2**2) 
		
		define B $($ans1/$ans2) 
		echo A_c misurata a 1 grado
		define A_c ?
		define A_c $($A_c*.81)
		echo errore su A_c ?
		define dA_c ?
		define dA_c $($dA_c*.81)
		set uxx = $($A_c-$dA_c) concat $A_c concat $($A_c+$dA_c)
		foreach var uxx {
		define r0  $(($var*.03922/($B*3.68))**(1/$gamma))
		echo r_0 = $r0 Mpc 
		}

		set dd=(zvec*Nume/$ans1)
		simp ansz zvec dd
		echo z_eff = $ansz
		
		
clustFI_gamma    03	
		##### parameters definitions:
		
		setcosmo
		define gamma $3
		myg $(($3-1)/2) terrm1
		myg $($3/2) terrm2
		define coeff_gamma $(1.77245*$terrm1/$terrm2)
		echo $coeff_gamma
		mate
		
		define Nz_file $1
		data $Nz_file read {usz 1}
		stats_med usz me si echo $me $si
		gaus_sm usz $2
		limits -.2 3.2 dndz erase box connect zvec dndz
		print xxx {zvec dndz}
		
		set Nume = gz*dndz**2
		simp ans1 zvec Nume 
		set Deno = dndz
		simp ans2 zvec Deno define ans2 $($ans2**2) 
		
		define B $($ans1/$ans2) 
		echo A_c misurata a 1 grado
		define A_c ?
		define A_c $($A_c) #*.81)
		echo errore su A_c ?
		define dA_c ?
		define dA_c $($dA_c) #*.81)
		set uxx = $($A_c-$dA_c) concat $A_c concat $($A_c+$dA_c)
		foreach var uxx {
		define r0  $(($var*.03922/($B*$coeff_gamma))**(1/$gamma))
		echo r_0 = $r0 Mpc 
		}
		
		set dd=(zvec*Nume/$ans1)
		simp ansz zvec dd
		echo z_eff = $ansz
		
		
myg	02	set tt = 0.00001,10.00001,.00001
		set xyt = tt**($1-1)*exp(-tt)
		simp answ tt xyt
		define $2 $answ
Clust_MW	
		ticksize 0 0 -1 0
		limits 0.4 5.5 -1.0 3 erase box
		foreach vAr {MW_13_halos MW_13.5_halos MW_14_halos} {
		data $vAr read {xa 1 ya 2} 
		set ya=ya-0.465        # correction for h-1 term
		spline xa ya zvec DensMW
		#limits 0 3 0 2 erase box connect zvec (10**DensMW*dVz*1000*.1)
		declare NII 0
		set II = 0.5,6,.1 foreach var II {
		set aa = (10**DensMW*dVz*3600*0.01) if(zvec>=$var) #echo $(sum(aa))   # integral at z>z_0
		#set aa = (10**DensMW*dVz*3600*0.01) if(abs(zvec-$var)<=0.5) #echo $(sum(aa))    # per unit z
		set NII = NII concat $(sum(aa))
		}
		connect II (lg(NII))
		}
		#goc II (lg(NII))
		ticksize 0 0 0 0
		#ltype 1 rel 1.4 -11 draw 1.4 11
		ltype 0
		xlabel Redshift
		ylabel Number (>z) [deg^{-2}]
		rel 1.05 0.0 label M_{TOT}>10^{14}M_\odot
		rel 1.45 2.3 label M_{TOT}>10^{13.5}M_\odot
		rel 3.45 2.3 label M_{TOT}>10^{13}M_\odot
