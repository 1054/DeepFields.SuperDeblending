do_Type_SED
    # 
    # usage:
    #    macro read do_Type_SED.sm do_Type_SED
    # 
    # read sed files
    macro read read_sed_files.sm read_sed_files
    macro read read_catalog_file.sm read_catalog_file
    # 
    # classify main-sequence (MS) and starburst (SB) types
    if(is_vector(xfSFR) && is_vector(xeSFR) && is_vector(MassX) && is_vector(xf_zz)) {
        set vdSFR = 0,dimen(xfSFR)-1 set vdSFR = vdSFR if(xfSFR>0)
        set lgSFR = xfSFR*0.0-99 set lgSFR[vdSFR] = lg(xfSFR[vdSFR])
        set eeSFR = xeSFR*0+1e10 set eeSFR[vdSFR] = xeSFR[vdSFR]/xfSFR[vdSFR]
        set msSFR = calc_Sargent2014_SFR(xf_zz,MassX) # already in log10 but in Salpeter IMF, while our xfSFR are in Chabrier IMF
        #<SEVERE><BUG><20160106># set Type_SED = (xfSFR>3*xeSFR) && (lgSFR-msSFR-lg(1.73)>0.6)
        #<SEVERE><BUG><20160106># set Type_MS = (xfSFR>3*xeSFR) && (lgSFR-msSFR-lg(1.73)<0.4)
        set Type_SED = (xfSFR>3*xeSFR) && (lgSFR-msSFR+lg(1.73)>0.6) #<SEVERE><BUG><20160106><FIXED>#
        set Type_MS = (xfSFR>3*xeSFR) && (lgSFR-msSFR+lg(1.73)<0.4) #<SEVERE><BUG><20160106><FIXED>#
        set Type_SED = (Type_MS==1) ? -1 : Type_SED
        print "coo_SED.txt" '%15.0f%15.0f%15g%15g%15g%15g%15g\n' {Type_SED SAVEDid lgSFR msSFR xfSFR xeSFR MassX}
        !date "+%Y-%m-%d\ %H:%M:%S" > coo_SED.log
        !echo "Writting to \"coo_SED.txt\"!" >> coo_SED.log
        !echo "We have "$(sum(Type_SED==1))" out of "$(dimen(Type_SED))" sources classified as pure starburst." >> coo_SED.log
        !echo "We have "$(sum(Type_SED==-1))" out of "$(dimen(Type_SED))" sources classified as pure mainsequence." >> coo_SED.log
        !echo "We have "$(sum(Type_SED==0))" out of "$(dimen(Type_SED))" sources unable to be classified." >> coo_SED.log
        !echo "Successfully output to \"coo_SED.txt\"!" >> coo_SED.log
        !echo "Please use the output file \"coo_SED.txt\" in the next time SED fitting!" >> coo_SED.log
        !cat coo_SED.log
    }







calc_Schreiber2014_SFR 02
    # astroSfig.sm
    # calculate SFR according to the sSFR evolution track of MS galaxies in Schreiber 2014 (arxiv) 2015 A&A
    # note that they are using Salpeter IMF for SFR and Mstar
    # input $1 is redshift
    # input $2 is stellar mass in log
    # output $0 is SFR in log
    # 
    if($?1==0||$?2==0){print 'Usage: calc_Schreiber2014_SFR z lg_M_star --> lg_SFR_MS\n' {} return}
    set _Schreiber2014_z = $1
    set _Schreiber2014_Mstar = $2
    set _Schreiber2014_SFR = _Schreiber2014_Mstar-9.0-0.50+1.5*lg(_Schreiber2014_z+1.0)
    set _Schreiber2014_mmr = _Schreiber2014_Mstar-9.0-0.36-2.5*lg(_Schreiber2014_z+1.0)
    set _Schreiber2014_SFR = _Schreiber2014_mmr>0 ? (_Schreiber2014_SFR-0.30*_Schreiber2014_mmr**2) : _Schreiber2014_SFR
    set $0 = _Schreiber2014_SFR
    return

calc_Sargent2014_SFR 02
    # astroSfig.sm
    # calculate SFR according to the sSFR evolution track of MS galaxies in Sargent 2014 ApJ (2013 arXiv)
    # note that they are using Chabrier IMF for SFR and Mstar
    # input $1 is redshift
    # input $2 is stellar mass in log
    # output $0 is SFR in log
    # 
    # see paper http://fr.arxiv.org/pdf/1303.4392v2
    #     appendix
    #     equation A1  sSFR(M_star,z) = N_M_star * exp(A*z/(1.0+B*z**C))
    #                  where N_M_star = 0.095 * 10**(-0.21*(log_M_star-lg(5e10)))
    #                        A = 2.05, B = 0.16, C = 1.54
    # 
    if($?1==0||$?2==0){print 'Usage: calc_Sargent2014_SFR z lg_M_star --> lg_SFR_MS\n' {} return}
    set _Sargent2014_z = $1
    set _Sargent2014_Mstar = $2
    set _Sargent2014_sSFR = 0.095 * 10**(-0.21*($2-lg(5e10))) * exp(2.05*$1/(1.0+0.16*$1**1.54))
    set _Sargent2014_SFR = lg(_Sargent2014_sSFR / 1e9 * 10**($2))
    set $0 = _Sargent2014_SFR
    #print {_Sargent2014_SFR _Sargent2014_sSFR _Sargent2014_Mstar _Sargent2014_z}
    return

calc_Bethermin2014_SFR 02
    # astroSfig.sm
    # calculate SFR according to the sSFR evolution track of MS galaxies in Bethermin 2014 arXiv (2015 A&A)
    # input $1 is redshift
    # input $2 is stellar mass in log
    # output $0 is SFR in log
    # 
    # see paper http://fr.arxiv.org/pdf/1409.5796v2
    #     section 4.2
    #     paragraph 1  (0.061±0.006Gyr**{−1})*(1+z)**{2.82±0.12} at z<2 and as (1+z)**{2.2±0.3} at z>2.
    # 
    if($?1==0||$?2==0){print 'Usage: calc_Bethermin2014_SFR z lg_M_star --> lg_SFR_MS\n' {} return}
    set _Bethermin2014_z = $1
    set _Bethermin2014_opz = 1.0 + _Bethermin2014_z
    set _Bethermin2014_Mstar = $2
    set _Bethermin2014_sSFR = (_Bethermin2014_z<2.0) ? (0.061*_Bethermin2014_opz**2.82) : (_Bethermin2014_opz**2.2)/10.0 
                                                                                          #<TODO># ERROR in Bethermin 2015 ???
                                                                                          #<TODO># ERROR in Bethermin 2015 ???
    #<TODO># set _Bethermin2014_sSFR = _Bethermin2014_sSFR / 10.0 # <TODO> seems there has a factor of 10 correction?
    set _Bethermin2014_SFR = lg(_Bethermin2014_sSFR / 1e9 * 10**($2))
    set $0 = _Bethermin2014_SFR
    return

calc_Bethermin2014_U 02
    # astroSfig.sm
    # calculate <U> according to the <U> evolution track of MS galaxies in Bethermin 2014 arXiv (2015 A&A)
    # input $1 is redshift
    # input $2 is starburst-ness: 0 for MS, 1 for SB. 
    # output $0 is <U>
    # 
    # see paper http://fr.arxiv.org/pdf/1409.5796v2
    #     Fig.7 caption: (3.0+-1.1)*(1+z)**(1.8+-0.4) for MS, 31+-3 for SB. 
    # 
    if($?1==0){print 'Usage: set U = calc_Bethermin2014_U(z) ==> <U>\n' {} return}
    set _Bethermin2014_z = $1
    set _Bethermin2014_opz = 1.0 + _Bethermin2014_z
    set _Bethermin2014_U = 3.0 * _Bethermin2014_opz**1.8
    if($?2) {if($2>=1) {set _Bethermin2014_U = 31.0} }
    set $0 = _Bethermin2014_U
    return



