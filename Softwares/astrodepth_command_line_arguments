#!/bin/bash
# 
# Aim:
#    This code recognizes command line arguments for "astrodepth_prior_extraction_photometry" script
# 
# Usage:
#    
# Updates:
#    20170209 created
# 
# 
# 

# 
# Prepare necessary functions
# 
# Function to readlink (replaced by DeepFields.SuperDeblending/Softwares/readlink)
#if [[ $(uname) == "Darwin" ]]; then
#    function readlink() {
#        if [[ $# -gt 1 ]]; then if [[ "$1" == "-f" ]]; then shift; fi; fi; DIR=$(echo "${1%/*}"); (cd "$DIR" && echo "$(pwd -P)/$(basename ${1})")
#    }
#fi
# Is_File
function Is_File() {
    if [[ $# -ge 1 ]]; then if [[ -f "$1" ]]; then return 0; else seq  -f "*" -s '' $(echo "${#1}+24" | bc); echo; echo "Error! \"$1\" was not found!"; seq  -f "*" -s '' $(echo "${#1}+24" | bc); echo; exit -1; return -1; fi; fi; return -1
}
# Is_Float_Number
function Is_Float_Number() {
    # http://stackoverflow.com/questions/13790763/bash-regex-to-check-floating-point-numbers-from-user-input
    if [[ $# -ge 1 ]]; then regExp='^([+-])?([0-9]+\.?|[0-9]*\.[0-9]+)([eE][+-]?[0-9]+)?$'; if [[ "$1" =~ $regExp ]]; then return 0; else seq  -f "*" -s '' $(echo "${#1}+7+2+23" | bc); echo; echo "Error! \"$1\" is not a float number!"; seq  -f "*" -s '' $(echo "${#1}+7+2+23" | bc); echo; exit -1; return -1; fi; fi; return -1
}
# checkDirExistence
checkDirExistence() {
    if [[ $# -ge 1 ]]; then if [[ ! -d "$1" ]]; then seq  -f "*" -s '' $(echo "7+1+${#1}+1+16" | bc); echo; echo "Error! \"$1\" does not exist!"; seq  -f "*" -s '' $(echo "7+1+${#1}+1+16" | bc); echo; exit -1; return -1; else return 0; fi; fi
}
# checkFileExistence
checkFileExistence() {
    if [[ $# -ge 1 ]]; then if [[ ! -f "$1" ]]; then seq  -f "*" -s '' $(echo "7+1+${#1}+1+16" | bc); echo; echo "Error! \"$1\" does not exist!"; seq  -f "*" -s '' $(echo "7+1+${#1}+1+16" | bc); echo; exit -1; return -1; else return 0; fi; fi
}

# 
# Prepare data arrays
# 
AstroDepth_INP_DEBUG=0
AstroDepth_INP_GOOD=1
AstroDepth_INP_YES=0
AstroDepth_INP_NO=0
AstroDepth_INP_STEPS=()
AstroDepth_INP_OVERWRITE=()
AstroDepth_INP_IMAGE_SCI=()
AstroDepth_INP_IMAGE_PSF=()
AstroDepth_INP_IMAGE_RMS=()
AstroDepth_INP_VALUE_RMS=()
AstroDepth_INP_OUTPUT_DIR=()
AstroDepth_INP_OUTPUT_NAME=()
AstroDepth_INP_CATALOG=()
AstroDepth_INP_CATALOG_ID=() # the column number (starting from 1)
AstroDepth_INP_CATALOG_RA=() # the column number (starting from 1)
AstroDepth_INP_CATALOG_DEC=() # the column number (starting from 1)
AstroDepth_INP_CATALOG_MASK=() # the column number (starting from 1)
AstroDepth_CMD_TYPE="n/a"

if [[ $AstroDepth_INP_DEBUG -eq 1 ]]; then
    echo "Input argument number: $#"
fi

while [[ "$#" -gt 0 ]]; do
    # echo $1
    TempStr=$(echo "$1" | tr '[:upper:]' '[:lower:]')
    # echo $TempStr
    case $1 in
         "-image") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-sci";;
           "-sci") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-sci";;
     "-image-sci") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-sci";;
           "-psf") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-psf";;
     "-image-psf") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-psf";;
           "-rms") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-rms";;
     "-image-rms") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="image-rms";;
     "-rms-value") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="value-rms";;
         "-prior") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog";;
           "-cat") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog";;
       "-catalog") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog";;
    "-catalog-id") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog-id";;
    "-catalog-ra") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog-ra";;
   "-catalog-dec") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog-dec";;
  "-catalog-mask") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="catalog-mask";;
           "-out") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-dir";;
        "-outdir") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-dir";;
       "-out-dir") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-dir";;
        "-output") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-dir";;
    "-output-dir") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-dir";;
   "-output-name") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-name";;
      "-out-name") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-name";;
       "-outname") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="output-name";;
          "-step") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="steps";;
         "-steps") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="steps";;
     "-overwrite") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="overwrite";;
    "-overwrites") AstroDepth_CMD_TEXT="$1"; shift; AstroDepth_CMD_TYPE="overwrite";;
           "-yes") AstroDepth_CMD_TEXT="$1";        AstroDepth_CMD_TYPE="yes";;
            "-no") AstroDepth_CMD_TEXT="$1";        AstroDepth_CMD_TYPE="no";;
    esac
    # echo "$AstroDepth_CMD_TYPE"
    case "$AstroDepth_CMD_TYPE" in 
      "image-sci") if [[ $# -gt 0 ]]; then AstroDepth_INP_IMAGE_SCI+=("$1"); fi;;
      "image-psf") if [[ $# -gt 0 ]]; then AstroDepth_INP_IMAGE_PSF+=("$1"); fi;;
      "image-rms") if [[ $# -gt 0 ]]; then AstroDepth_INP_IMAGE_RMS+=("$1"); fi;;
      "value-rms") if [[ $# -gt 0 ]]; then AstroDepth_INP_VALUE_RMS+=("$1"); fi;;
        "catalog") if [[ $# -gt 0 ]]; then AstroDepth_INP_CATALOG+=("$1"); fi;;
     "catalog-ra") if [[ $# -gt 0 ]]; then AstroDepth_INP_CATALOG_RA+=("$1"); fi;;
    "catalog-dec") if [[ $# -gt 0 ]]; then AstroDepth_INP_CATALOG_DEC+=("$1"); fi;;
   "catalog-mask") if [[ $# -gt 0 ]]; then AstroDepth_INP_CATALOG_MASK+=("$1"); fi;;
     "output-dir") if [[ $# -gt 0 ]]; then AstroDepth_INP_OUTPUT_DIR+=("$1"); fi;;
    "output-name") if [[ $# -gt 0 ]]; then AstroDepth_INP_OUTPUT_NAME+=("$1"); fi;;
          "steps") if [[ $# -gt 0 ]]; then AstroDepth_INP_STEPS+=("$1"); fi;;
      "overwrite") if [[ $# -gt 0 ]]; then AstroDepth_INP_OVERWRITE+=($(echo "$1" | tr '[:upper:]' '[:lower:]')); fi;;
            "yes")                         AstroDepth_INP_YES=1;;
             "no")                         AstroDepth_INP_NO=1;;
    esac
    
    if [[ "$AstroDepth_CMD_TYPE" == "n/a" ]];  then 
        AstroDepth_INP_MISC+=("$1")
    fi
    
    if [[ $# -gt 0 ]]; then shift; fi
    
done



if [[ $AstroDepth_INP_DEBUG -eq 1 ]]; then
    echo "AstroDepth_INP_YES              = "$(printf "'%s', " "${AstroDepth_INP_YES}"                  | sed -e 's/, $//g')
    echo "AstroDepth_INP_NO               = "$(printf "'%s', " "${AstroDepth_INP_NO}"                   | sed -e 's/, $//g')
    echo "AstroDepth_INP_IMAGE_SCI        = "$(printf "'%s', " "${AstroDepth_INP_IMAGE_SCI[@]}"         | sed -e 's/, $//g')
    echo "AstroDepth_INP_IMAGE_PSF        = "$(printf "'%s', " "${AstroDepth_INP_IMAGE_PSF[@]}"         | sed -e 's/, $//g')
    echo "AstroDepth_INP_IMAGE_RMS        = "$(printf "'%s', " "${AstroDepth_INP_IMAGE_RMS[@]}"         | sed -e 's/, $//g')
    echo "AstroDepth_INP_CATALOG          = "$(printf "'%s', " "${AstroDepth_INP_CATALOG[@]}"           | sed -e 's/, $//g')
fi



# Check Files or Dirs

for (( i=0; i<${#AstroDepth_INP_IMAGE_SCI[@]}; i++ )); do
    checkFileExistence "${AstroDepth_INP_IMAGE_SCI[i]}"
done

for (( i=0; i<${#AstroDepth_INP_IMAGE_PSF[@]}; i++ )); do
    checkFileExistence "${AstroDepth_INP_IMAGE_PSF[i]}"
done

for (( i=0; i<${#AstroDepth_INP_IMAGE_RMS[@]}; i++ )); do
    checkFileExistence "${AstroDepth_INP_IMAGE_RMS[i]}"
done

for (( i=0; i<${#AstroDepth_INP_CATALOG[@]}; i++ )); do
    checkFileExistence "${AstroDepth_INP_CATALOG[i]}"
done
















