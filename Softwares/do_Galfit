#!/bin/bash
# 

set -e

. do_Preset Galfit $*

if [[ ! -f "goFine.sm" ]]; then echo "Error! \"goFine.sm\" was not found!"; exit; fi

sm << EOF | tee $DG_FLOG".smlog"
    
    
    define doFit $DG_PARA
    
    
    ####################################
    #      PREPARE FIT PARAMETERS      #
    ####################################
    
    #####  EDIT goFine.sm xSet_$DG_IMAX
    macro  read goFine.sm xSet_$DG_IMAX
    
    ###### EDIT goSimu.sm FixAstrometry for SciFits
    echo " "
    
    if(is_file($DG_FSCI.fits)) {
        define imax_name $DG_FSCI
        echo "We are using "\$imax_name".fits as the source image."
        echo " "
    } else {
        echo "We are using "\$imax_name".fits as the source image. (The default setting in goFine.sm)"
        echo " "
    }
    
    if(!is_file(\$imax_name.fits)) {
        echo "********************************************"
        echo "Error! "\$imax_name".fits was not found!"
        echo " "
        define doFit -1
    }
    
    if(is_file($DG_FRMS.fits)) {
        define imax_name_rms $DG_FRMS
        echo "We are using "\$imax_name_rms".fits as the rms image."
        echo " "
    } else {
        echo "We are using "\$imax_name_rms".fits as the rms image. (The default setting in goFine.sm)"
        echo " "
    }
    
    if(!is_file(\$imax_name_rms.fits)) {
        echo "********************************************"
        echo "Error! "\$imax_name_rms".fits was not found!"
        echo " "
        define doFit -1
    }
    
    if(is_file($DG_FPSF.fits)) {
        define imax_name_psf $DG_FPSF
        echo "We are using "\$imax_name_psf".fits as the psf image."
        echo " "
    } else {
        echo "We are using "\$imax_name_psf".fits as the psf image. (The default setting in goFine.sm)"
        echo " "
    }
    
    if(!is_file(\$imax_name_psf.fits)) {
        echo "********************************************"
        echo "Error! "\$imax_name_psf".fits was not found!"
        echo " "
        define doFit -1
    }
    
    define xdate <"$DG_DATE">
    
    
    
    ######################################
    #      PREPARE FIT WITH CATALOG      #
    ######################################
    
    ####   CATALOG
    define catalog_file \"$DG_CATA\"
    if(is_file(\$catalog_file)) {
        data \$catalog_file
        if(index('\$catalog_file','irac_mips_fluxes')>=0 && index('\$catalog_file','id_ra_dec')<0) {
            read  {idF 3 raF 1 deF 2}
            echo " "
        } else {
            read  {idF 1 raF 2 deF 3}
            echo " "
        }
        echo "We are using "\$catalog_file" as the source catalog."
        echo " "
    } else {
        echo "********************************************"
        echo "Error! "\$catalog_file" was not found!"
        echo " "
        define doFit -1
    }
    
    ####   EXCLUDE
    define exclude_file "${DG_FSED}.txt"
    if(is_file(\$exclude_file)) {
        data \$exclude_file
        read {idS 1 raS 2 deS 3 flagExclude 4}
        set  idF = idF if(flagExclude==0) set idIncl = idF set idExcl = idS if(flagExclude==1)
        set  raF = raF if(flagExclude==0) set raIncl = raF set raExcl = raS if(flagExclude==1)
        set  deF = deF if(flagExclude==0) set deIncl = deF set deExcl = deS if(flagExclude==1)
        echo "We exclude "\$(sum(flagExclude))" faint sources during the fitting, and only fit "\$(dimen(flagExclude)-sum(flagExclude))" sources."
        echo " "
    } else {
        echo "We do not exclude faint sources here."
        echo " "
    }
    
    ####   INCLUDE
    define include_file "${DG_CATB}"
    if(is_file(\$include_file)) {
        data \$include_file
        read  {idN 1 raN 2 deN 3}
        set    idF = idF concat idN   set  idAdds = idN
        set    raF = raF concat raN   set  raAdds = raN
        set    deF = deF concat deN   set  deAdds = deN
        echo "We include "\$(dimen(idN))" additional sources selected from the residual maps. "
        echo "Coordinates are stored in ${DG_CATB}"
        echo "Now we are fitting "\$(dimen(idF))" sources."
        echo " "
    } else {
        echo "We do not include additional sources here."
        echo " "
    }
    
    ####   TODO: FIT EXCLUDE SOURCES INSTEAD OF INCLUDE SOURCES <Added><20141030><DzLIU>
    if(2==$DG_PFIT) {
        set idF = idExcl
        set raF = raExcl
        set deF = deExcl
        echo "TODO: Now we do not fit included sources on faint-source-subtracted map, instead we fit excluded sources on fitted-sources-subtracted map!"
        echo " "
    }
    
    ####   WE NOW HAVE NNNN SOURCES TO FIT
    if(dimen(idF)>0) {
        echo "We now have "\$(dimen(idF))" sources to be fit."
        echo " "
    }
    
    
    
    ########################################
    #      PREPARE FIT WITH PRIOR MAG      #
    ########################################
    
    if(1==$DG_PRIM) {
        data "results_"\$imax"_"\$xdate read < xm\$imax 4 >
        !echo "We are setting prior magnitudes according to the xm"\$imax" in the results_"\$imax"_"\$xdate"."
        !echo " "
    } else {
        !echo "We do not set prior mag for this fit."
        !echo " "
    }
    
    
    
    #################################
    #      PREPARE FIT PARALLEL     #
    #################################
    
    if(1==\$doFit) {
        define doParallel 1
        echo "We are preparing all galfit boxes for the next step parallel fitting in each box! "
        echo " "
    }
    
    if(2==\$doFit) {
        define doPostParallel 1
        echo "We are processing post parallel data now."
        echo " "
    }
    
    if(-1==\$doFit) {
        echo "********************************************"
        echo "Oops! Some error occured! Please check the above information and start over!"
        echo " "
        echo " "
    }
    
    
    
    #####################
    #      GALFIT       #
    #####################
    ###### FIT & REBUILD
    define use_prior_mags $DG_PRIM
    define vary_positions $DG_VARY
    define fix_astrometry 1
    define make_residuals 0
    if(dimen(idF)>0 && \$doFit==0) {
        Fit_XXX
        Rebuild_XXX
    }
    if(dimen(idF)>0 && \$doFit==1) {
        Fit_XXX
    }
    if(dimen(idF)>0 && \$doFit==2) {
        Fit_XXX
        Rebuild_XXX
    }
    
    
    
    ####################
    #      FINISH      #
    ####################
    if(\$doFit>=0) {
        if(dimen(idF)>0) {
            echo SM Galfit Finished!
        } else {
            echo SM Galfit Failed!
        }
    } else {
        echo SM Galfit Failed!
    }
    quit
EOF

#echo Done!










